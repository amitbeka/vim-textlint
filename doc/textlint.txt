*textlint*	Wrapper for textlint.

Version: 1.2.0
Author: Shinya Ohynagi <sohyanagi@gmail.com>
Repository: http://github.com/heavenshell/vim-textlint/
License: BSD, see LICENSE for more details.

==============================================================================
CONTENTS					*textlint-vim-contents*

Introduction		|textlint-vim-introduction|
Install			|textlint-vim-install|
Tutorial		|textlint-vim-tutorial|
Variables		|textlint-vim-variables|

==============================================================================
INTRODUCTION					*textlint-vim-introduction*

|textlint.vim| is a wrapper of `textlint`.

I want to load `textlint` config file dynamically.

`Syntastic` can use `textlint` but not support config file.

`watchdocs.vim` also has `textlint` settings but not supporting config file.


==============================================================================
INSTALL						*textlint-vim-install*

Install the distributed files into Vim runtime directory which is usually
~/.vim/, or $HOME/vimfiles on Windows.

If you install pathogen that provided from Tim Pope, you should extract the
file into 'bundle' directory.

==============================================================================
TUTORIAL					*textlint-vim-tutorial*

Configure:

Add textlint config file name to your .vimrc.
>
  " textlint.vim {{{
  let g:textlint_configs = [
    \ '@azu/textlint-config-readme',
    \ '@example/textlint-config-example',
    \ ]
    " }}}
>
Usage:
>
  :Textlint
  :cwindow
>
If you did not set any args, vim-textlint would use g:textlint_configs's first value.
>
  :Textlint -c @example/textlint-config-example
  :cwindow

After run `:Textlint` textlint.vim would show errors if error exists.

- Show QuickFix error in statusline, and highlight QuickFix errors run
  quickfixstatus.vim and vim-hier.
>
  function! s:textlint_after(...)
    execute ':QuickfixStatusEnable'
    execute ':HierUpdate'
  endfunction

  let g:textlint_callbacks = {
    \ 'after_run': function('s:texltint_after')
    \ }
  autocmd BufWritePost *.md call textlint#run()
  autocmd InsertLeave *.md call textlint#run()
  autocmd TextChanged,TextChangedI *.md call textlint#run()
>
You can select textlint config file via command line.

Autofix:

If rules are fixable, you can autofix with `TextintFix`.
>
Helpful plugins
`QuickFixstatus` shows error message at the bottom of the screen.

`Hier` will highlight quickfix errors and location list entries in buffer.

==============================================================================
VARIABLES					*textlint-vim-variables*
g:textlint_configs				*g:textlint_configs*
		List of textlint configs.
		First value is default value.

		Default value is [].


g:textlint_enable_quickfix			*g:textlint_enable_quickfix*
		Enable to open QuickFix window automatically.

		Default value is 0(Do not open automatically)


g:textlint_callbacks				*g:textlint_callbacks*
		Hook points. User can inject various functions to snowflke.

		before_run	Inject to textlint#run() before called
		after_run 	Inject to textlint#run() after called

g:textlint_clear_quickfix			*g:textlint_clear_quickfix*
		Clear QuickFix every time befor run.

		Default value is 1(Clear QuickFix)

g:texlint_bin					*g:textlint_bin*
		Path to grobal textlint binary.

		Default value is ''(Nothing set)

==============================================================================
CHANGELOG					*textlint-vim-changelog*
2019-4-30
- Add TextlintFix

2017-05-18
- Add tests

2017-05-14
- Fix bugs
  Multi config did not work collectly

2017-05-12
- Fix textlint returns error

2017-02-14
- Run :Textlint with job and channel
- Remove watchdocs.vim integrate

2016-07-11
- Add watchdocs.vim support.

2016-07-10
- First release

vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
